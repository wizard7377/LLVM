package llvm
-- version =
authors = "Asher Frost"
-- maintainers =
-- license =
-- brief =
-- readme =
-- homepage =
-- sourceloc =
-- bugtracker =

-- the Idris2 version required (e.g. langversion >= 0.5.1)
-- langversion

-- packages to add to search path
-- depends =

-- modules to install
modules = 
    Control.LLVM,
    Control.Runnable,
    Control.LLVM.Code,
    Control.LLVM.Text,
    Control.LLVM.Stage,
    Control.LLVM.Text.Execute,
    Control.LLVM.Text.Assemble,
    Control.LLVM.Text.Binary,
    Control.LLVM.Text.Compile,
    Control.LLVM.Text.Link,
    Control.LLVM.Text.Convert,
    Control.LLVM.Text.Optimize,
    Control.LLVM.Text.Build,
    Control.LLVM.Text.Combine,
    Data.MonadIO,
    Data.LLVM,
    Data.Walk,
    Data.Table,
    Data.LLVM.Verify,
    Data.LLVM.Builders,
    Data.LLVM.Write,
    Data.LLVM.IR,
    Data.LLVM.Pass,
    Data.LLVM.Interface,
    Data.LLVM.Logic,
    Data.LLVM.Foreign,
    Data.LLVM.CC,
    Data.LLVM.Class,
    Data.LLVM.Casts,
    Data.LLVM.Logic.Infer,
    Data.LLVM.Logic.Casting,
    Data.LLVM.Logic.Types,
    Data.LLVM.IR.Core,
    Data.LLVM.IR.Alias,
    Data.LLVM.IR.Util,
    Data.LLVM.IR.Program,
    Data.LLVM.Write.Common,
    Data.LLVM.Write.Foreign,
    Data.LLVM.Write.Types,
    Data.LLVM.Write.Text.Encode,
    Data.LLVM.Write.Text.Types,
    Data.LLVM.Write.Foreign.Step,
    Data.LLVM.Write.Foreign.Monad,
    Data.LLVM.Write.Foreign.Values,
    Data.LLVM.CC.Prim,
    Data.LLVM.CC.Macros,
    Data.LLVM.CC.Support,
    Data.LLVM.CC.Reflect,
    Data.LLVM.Builders.Helper,
    Data.LLVM.Builders.Inst,
    Data.LLVM.Builders.Math,
    Data.LLVM.Builders.Core,
    Data.LLVM.Builders.Metadata,
    Data.LLVM.Builders.Ops,
    Data.LLVM.Builders.Sugar,
    Data.LLVM.Builders.Control,
    Data.LLVM.Builders.Suggestions,
    Data.LLVM.Builders.Builder.Complex,
    Data.LLVM.Builders.Builder.Builder,
    Data.LLVM.Builders.Builder.Types,
    System.LLVM,
    System.LLVM.Common,
    System.LLVM.Foreign,
    System.LLVM.Compile,
    System.LLVM.Link,
    System.LLVM.Assembler,
    System.LLVM.Run,
    System.LLVM.Stage,
    System.LLVM.Optimize,
    System.LLVM.Build



-- main file (i.e. file to load at REPL)
-- main =

-- name of executable
-- executable =
-- opts = ""
sourcedir = "src"
builddir = "build"
outputdir = "out"

-- script to run before building
-- prebuild =

-- script to run after building
-- postbuild =

-- script to run after building, before installing
-- preinstall =

-- script to run after installing
-- postinstall =

-- script to run before cleaning
-- preclean =

-- script to run after cleaning
-- postclean =
